/*
 * Copyright (c) 2023 Andrei Gaevskii
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt {
    quick_tap_ms = <200>;
};

&mt {
    quick_tap_ms = <200>;
};

/ {
    macros {
        equalWithSpace: equalWithSpace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp SPACE &kp EQUAL &kp SPACE>;
            label = "EQUALWITHSPACE";
        };
    };

    behaviors {
        hrmt: hrmt {
            compatible = "zmk,behavior-hold-tap";
            label = "Home row Mod-Tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
          &kp ESC    &kp N1  &kp N2                &kp N3         &kp N4              &kp N5       &kp N6     &kp N7               &kp N8         &kp N9                  &kp N0    &kp MINUS
&kp LWIN  &kp GRAVE  &kp Q   &kp W                 &kp E          &kp R               &kp T        &kp Y      &kp U                &kp I          &kp O                   &kp P     &kp LBKT       &mt RWIN RBKT
          &kp LCTRL  &kp A   &hrmt LEFT_ALT S      &hrmt LCTRL D  &hrmt LEFT_SHIFT F  &kp G        &kp H      &hrmt RIGHT_SHIFT J  &hrmt RCTRL K  &hrmt RIGHT_ALT L       &kp SEMI  &mt RCTRL SQT
          &kp LALT   &kp Z   &kp X                 &kp C          &kp V               &kp B        &kp N      &kp M                &kp COMMA      &kp DOT                 &kp FSLH  &mt RALT BSLH
                             &lt 4 LA(LEFT_SHIFT)  &lt 2 TAB      &mt LSHFT SPACE     &lt 1 RET    &lt 1 ESC  &mt LEFT_SHIFT BSPC  &lt 2 DEL      &mt RGUI RIGHT_BRACKET
            >;
        };

        lower_layer {
            bindings = <
        &trans          &trans    &trans  &trans     &trans    &trans       &trans     &trans    &trans     &trans    &trans    &trans
&trans  &kp UNDER       &kp F1    &kp F2  &kp F3     &kp F4    &kp F5       &kp F6     &kp F7    &kp F8     &kp F9    &kp F10   &kp F11          &mt RGUI F12
        &mt LCTRL PLUS  &kp EXCL  &kp AT  &kp HASH   &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS  &kp STAR   &kp LPAR  &kp RPAR  &mt RCTRL MINUS
        &mt LALT EQUAL  &kp N1    &kp N2  &kp N3     &kp N4    &kp N5       &kp N6     &kp N7    &kp N8     &kp N9    &kp N0    &trans
                                  &trans  &lt 3 TAB  &trans    &trans       &trans     &trans    &lt 3 DEL  &trans
            >;
        };

        raise_layer {
            bindings = <
        &trans           &trans           &trans        &trans     &trans      &trans          &trans                        &trans     &trans        &trans          &trans     &trans
&trans  &kp KP_NUM       &kp KP_SLASH     &kp KP_N7     &kp KP_N8  &kp EQUAL   &kp KP_MINUS    &mt C_NEXT C_VOLUME_UP        &kp LC(V)  &kp LC(C)     &kp LC(X)       &kp LC(Z)  &kp CAPS         &trans
        &mt LCTRL EQUAL  &kp KP_MULTIPLY  &kp LEFT_ALT  &kp LCTRL  &kp LSHIFT  &kp KP_PLUS     &mt C_MUTE C_PLAY_PAUSE       &kp LEFT   &kp UP_ARROW  &kp DOWN_ARROW  &kp RIGHT  &mt RCTRL K_APP
        &trans           &kp LC(Z)        &kp LC(X)     &kp LC(C)  &kp LC(V)   &kp LC(Y)       &mt C_PREVIOUS C_VOLUME_DOWN  &kp HOME   &kp PAGE_UP   &kp PAGE_DOWN   &kp END    &trans
                                          &trans        &trans     &trans      &lt 3 RET       &lt 3 ESC                     &trans     &trans        &trans
            >;
        };

        adjust_layer {
            bindings = <
       &none        &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &none
&none  &bootloader  &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &bootloader  &none
       &bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
       &sys_reset   &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &sys_reset
                                  &none         &trans        &none         &trans          &trans        &none         &trans        &none
            >;
        };

        media {
            bindings = <
        &trans  &trans  &trans  &trans  &trans  &trans    &trans             &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &kp C_VOLUME_UP    &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans  &trans    &kp C_PP           &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans  &trans    &kp C_VOLUME_DOWN  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans    &trans             &trans  &trans  &trans
            >;
        };
    };
};
